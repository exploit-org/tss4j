package org.exploit.tss.util;

import java.io.ByteArrayOutputStream;
import java.nio.ByteBuffer;
import java.util.Objects;

public final class Bytes {
    private Bytes() {}

    public static byte[] concat(byte[]... parts) {
        Objects.requireNonNull(parts, "parts");
        try (var out = new ByteArrayOutputStream()) {
            for (var p : parts) {
                out.write(p);
            }
            return out.toByteArray();
        } catch (Exception e) {
            throw new RuntimeException(e);
        }
    }

    public static byte[] encode(byte[]... parts) {
        Objects.requireNonNull(parts, "parts");
        try (var out = new ByteArrayOutputStream()) {
            for (var p : parts) {
                if (p == null)
                    throw new NullPointerException("null part");

                out.write(ByteBuffer.allocate(4).putInt(p.length).array());
                out.write(p);
            }
            return out.toByteArray();
        } catch (Exception e) {
            throw new RuntimeException(e);
        }
    }
}