package org.exploit.threshield.commitment;

import lombok.Getter;
import org.exploit.gmp.BigInt;
import org.exploit.threshield.curve.PointOps;

@Getter
public class PedersenCommitment<P extends PointOps<P>> {
    private final PointOps<P> g;
    private final PointOps<P> h;
    private final BigInt q;

    public PedersenCommitment(PointOps<P> g, PointOps<P> h, BigInt q) {
        this.g = g;
        this.h = h;
        this.q = q;
    }

    public PointOps<P> commit(BigInt x, BigInt r) {
        return g.mul(x).add(h.mul(r)).normalize();
    }

    public boolean verify(PointOps<P> commitment, BigInt x, BigInt r) {
        var expected = g.mul(x).add(h.mul(r)).normalize();
        var actual = commitment.normalize();

        return expected.equals(actual);
    }
}