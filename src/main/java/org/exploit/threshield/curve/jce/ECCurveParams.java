package org.exploit.threshield.curve.jce;

import lombok.AllArgsConstructor;
import org.bouncycastle.asn1.x9.X9ECParameters;
import org.exploit.threshield.curve.EllipticCurveParams;
import org.exploit.threshield.curve.scalar.XmdParams;

import java.math.BigInteger;

@AllArgsConstructor
public class ECCurveParams implements EllipticCurveParams<ECPointOps> {
    private final X9ECParameters parameters;

    @Override
    public ECPointOps getG() {
        return new ECPointOps(parameters.getG());
    }

    @Override
    public BigInteger getCurveOrder() {
        return parameters.getN();
    }

    @Override
    public ECPointOps getInfinity() {
        return new ECPointOps(parameters.getCurve().getInfinity());
    }

    public X9ECParameters getX9ECParameters() {
        return parameters;
    }

    @Override
    public ECPointOps createPoint(BigInteger x, BigInteger y) {
        return new ECPointOps(parameters.getCurve().createPoint(x, y));
    }

    @Override
    public XmdParams selectXmdParams() {
        int lambda = (getCurveOrder().bitLength() + 7) >>> 3;
        int minL = 2 * lambda;

        if (lambda <= 32) {
            int L = Math.max(48, minL);
            return new XmdParams("SHA-256", L);
        } else {
            int L = roundUp(minL, 64);
            return new XmdParams("SHA-512", L);
        }
    }

    private static int roundUp(int n, int m) {
        return ((n + m - 1) / m) * m;
    }
}
