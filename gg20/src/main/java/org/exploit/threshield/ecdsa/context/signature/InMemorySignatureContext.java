package org.exploit.threshield.ecdsa.context.signature;

import org.bouncycastle.math.ec.ECPoint;
import org.exploit.threshield.util.Sum;

import java.math.BigInteger;
import java.util.Map;
import java.util.concurrent.ConcurrentHashMap;

public class InMemorySignatureContext implements SignatureContext {
    private final Map<Integer, ECPoint> gammas = new ConcurrentHashMap<>();
    private final Map<Integer, BigInteger> deltas = new ConcurrentHashMap<>();

    @Override
    public void storeGamma(int peerId, ECPoint gamma) {
        gammas.put(peerId, gamma);
    }

    @Override
    public void storeDeltaShare(int peerId, BigInteger deltaShare) {
        deltas.put(peerId, deltaShare);
    }

    @Override
    public ECPoint computeGammaProduct(ECPoint clientGamma) {
        var product = clientGamma;

        for (var gamma : gammas.values()) {
            product = product.add(gamma);
        }

        return product.normalize();
    }

    @Override
    public BigInteger computeDeltaSum(BigInteger deltaShare, BigInteger q) {
        return Sum.modSum(deltaShare, q, deltas.values());
    }
}
