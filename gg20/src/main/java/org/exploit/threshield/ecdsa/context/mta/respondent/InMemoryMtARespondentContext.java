package org.exploit.threshield.ecdsa.context.mta.respondent;

import org.exploit.threshield.util.Sum;

import java.math.BigInteger;
import java.util.Map;
import java.util.Objects;
import java.util.concurrent.ConcurrentHashMap;

public class InMemoryMtARespondentContext implements MtARespondentContext{
    private final Map<Integer, BigInteger> betas = new ConcurrentHashMap<>();
    private final Map<Integer, BigInteger> nus = new ConcurrentHashMap<>();

    @Override
    public void storeBeta(int peerId, BigInteger beta) {
        betas.put(peerId, Objects.requireNonNull(beta));
    }

    @Override
    public void storeNu(int peerId, BigInteger Nu) {
        nus.put(peerId, Objects.requireNonNull(Nu));
    }

    @Override
    public BigInteger modSumBeta(BigInteger delta, BigInteger q) {
        return Sum.modSum(delta, q, betas.values());
    }

    @Override
    public BigInteger modSumNu(BigInteger sigma, BigInteger q) {
        return Sum.modSum(sigma, q, nus.values());
    }
}
