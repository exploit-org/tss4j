package org.exploit.ecies.context.aggregator;

import org.exploit.ecies.model.PartialDecrypt;
import org.exploit.tss.curve.ec.WeierstrassPointOps;

import java.util.Collection;
import java.util.Map;
import java.util.concurrent.ConcurrentHashMap;

public class InMemoryPartialDecryptContext<P extends WeierstrassPointOps<P>> implements PartialDecryptContext<P> {
    private final Map<Integer, PartialDecrypt<P>> partialDecrypts = new ConcurrentHashMap<>();

    @Override
    public Collection<PartialDecrypt<P>> getPartialDecrypts() {
        return partialDecrypts.values();
    }

    @Override
    public void storePartialDecrypt(PartialDecrypt<P> partialDecrypt) {
        partialDecrypts.put(partialDecrypt.idx(), partialDecrypt);
    }
}
