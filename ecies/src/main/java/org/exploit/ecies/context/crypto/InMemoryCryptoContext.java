package org.exploit.ecies.context.crypto;

import lombok.AllArgsConstructor;
import lombok.Builder;
import org.exploit.sodium.SecretBox;
import org.exploit.tss.curve.EllipticCurveParams;
import org.exploit.tss.curve.ec.WeierstrassCurveParams;
import org.exploit.tss.curve.ec.WeierstrassPointOps;

import java.util.List;
import java.util.function.Supplier;

@Builder
@AllArgsConstructor
public class InMemoryCryptoContext<P extends WeierstrassPointOps<P>> implements ECIESCryptoContext<P> {
    private final int idx;
    private final SecretBox ski;
    private final Supplier<byte[]> memKey;
    private final WeierstrassCurveParams<P> curve;
    private final List<Integer> participants;
    private P publicKey;

    @Override
    public int idx() {
        return idx;
    }

    @Override
    public SecretBox ski() {
        return ski;
    }

    @Override
    public Supplier<byte[]> memKey() {
        return memKey;
    }

    @Override
    public EllipticCurveParams<P> curve() {
        return curve;
    }

    @Override
    public List<Integer> participants() {
        return participants;
    }

    @Override
    public P Y() {
        return publicKey;
    }
}
