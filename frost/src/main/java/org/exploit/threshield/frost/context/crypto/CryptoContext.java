package org.exploit.threshield.frost.context.crypto;

import org.exploit.threshield.curve.PointOps;
import org.exploit.threshield.context.ShamirKeyContext;
import org.exploit.threshield.util.Polynomials;

import java.math.BigInteger;

public interface CryptoContext<P extends PointOps<P>> extends ShamirKeyContext<P> {
    PointOps<P> Y();

    default PointOps<P> publicShare() {
        return curve().getG().mul(ski()).normalize();
    }

    default BigInteger lagrangeShare() {
        return Polynomials.lagrangeShare(ski(), idx(), participants(), curve().getCurveOrder());
    }
}
